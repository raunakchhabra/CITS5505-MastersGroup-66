"""Create user table

Revision ID: 854e247f6165
Revises: 78294d82a87b
Create Date: 2025-05-11 16:01:45.877263

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '854e247f6165'
down_revision = '78294d82a87b'
branch_labels = None
depends_on = None


def upgrade():
    bind = op.get_bind()
    # ### commands auto generated by Alembic - please adjust! ###
    if not op.get_bind().dialect.has_table(op.get_bind(), 'achievement'):
        if not bind.dialect.has_table(bind, 'achievement'):
            op.create_table('achievement',
                sa.Column('id', sa.Integer(), nullable=False),
                sa.Column('name', sa.Text(), nullable=False),
                sa.Column('description', sa.Text(), nullable=False),
                sa.Column('icon', sa.Text(), nullable=False),
                sa.PrimaryKeyConstraint('id')    
            )
    if not op.get_bind().dialect.has_table(op.get_bind(), 'user'):
        if not bind.dialect.has_table(bind, 'user'):
            op.create_table('user',
                sa.Column('id', sa.Integer(), nullable=False),
                sa.Column('name', sa.Text(), nullable=False),
                sa.Column('email', sa.Text(), nullable=False),
                sa.Column('password_hash', sa.Text(), nullable=False),
                sa.Column('role', sa.Text(), nullable=False),
                sa.Column('xp', sa.Integer(), nullable=False),
                sa.Column('streak_days', sa.Integer(), nullable=False),
                sa.Column('app_language', sa.Text(), nullable=False),
                sa.Column('daily_goal_minutes', sa.Integer(), nullable=False),
                sa.Column('receive_reminder', sa.Boolean(), nullable=False),
                sa.Column('receive_email', sa.Boolean(), nullable=False),
                sa.PrimaryKeyConstraint('id'),
                sa.UniqueConstraint('email')
            )
    if not bind.dialect.has_table(bind, 'course'):
        op.create_table('course',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('name', sa.Text(), nullable=False),
            sa.Column('language', sa.Text(), nullable=False),
            sa.Column('level', sa.Text(), nullable=False),
            sa.Column('description', sa.Text(), nullable=False),
            sa.Column('teacher_id', sa.Integer(), nullable=False),
            sa.ForeignKeyConstraint(['teacher_id'], ['user.id'], ),
            sa.PrimaryKeyConstraint('id')
            )
    if not bind.dialect.has_table(bind, 'data'):
        op.create_table('data',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('user_id', sa.Integer(), nullable=False),
            sa.Column('title', sa.String(length=100), nullable=False),
            sa.Column('data_type', sa.Enum('VOCABULARY', 'STUDY_TIME', 'ASSESSMENT', 'OTHER', name='datatype'), nullable=False),
            sa.Column('description', sa.Text(), nullable=True),
            sa.Column('file_path', sa.String(length=255), nullable=True),
            sa.Column('content', sa.Text(), nullable=True),
            sa.Column('extra_metadata', sa.JSON(), nullable=True),
            sa.Column('created_at', sa.DateTime(), nullable=False),
            sa.Column('updated_at', sa.DateTime(), nullable=False),
            sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    if not bind.dialect.has_table(bind, 'forumpost'):
        op.create_table('forumpost',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('user_id', sa.Integer(), nullable=False),
            sa.Column('content', sa.Text(), nullable=False),
            sa.Column('created_at', sa.DateTime(), nullable=False),
            sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    if not bind.dialect.has_table(bind, 'friendship'):
        op.create_table('friendship',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('user_id', sa.Integer(), nullable=False),
            sa.Column('friend_id', sa.Integer(), nullable=False),
            sa.Column('created_at', sa.DateTime(), nullable=False),
            sa.ForeignKeyConstraint(['friend_id'], ['user.id'], ),
            sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    if not bind.dialect.has_table(bind, 'recommendation'):
        op.create_table('recommendation',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('user_id', sa.Integer(), nullable=False),
            sa.Column('content', sa.Text(), nullable=False),
            sa.Column('created_at', sa.DateTime(), nullable=False),
            sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    if not bind.dialect.has_table(bind, 'sharegroup'):
        op.create_table('sharegroup',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('owner_id', sa.Integer(), nullable=False),
            sa.Column('name', sa.Text(), nullable=False),
            sa.Column('created_at', sa.DateTime(), nullable=False),
            sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    if not bind.dialect.has_table(bind, 'sharerecord'):
        op.create_table('sharerecord',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('owner_id', sa.Integer(), nullable=False),
            sa.Column('target_user_id', sa.Integer(), nullable=False),
            sa.Column('data_type', sa.Text(), nullable=False),
            sa.Column('data_content', sa.Text(), nullable=False),
            sa.Column('shared_at', sa.DateTime(), nullable=False),
            sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
            sa.ForeignKeyConstraint(['target_user_id'], ['user.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    if not bind.dialect.has_table(bind, 'studylog'):
        op.create_table('studylog',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('user_id', sa.Integer(), nullable=False),
            sa.Column('date', sa.Text(), nullable=False),
            sa.Column('duration_minutes', sa.Integer(), nullable=False),
            sa.Column('activity_type', sa.Text(), nullable=False),
            sa.Column('skills', sa.Text(), nullable=False),
            sa.Column('notes', sa.Text(), nullable=False),
            sa.Column('rating', sa.Integer(), nullable=False),
            sa.Column('created_at', sa.DateTime(), nullable=False),
            sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    if not bind.dialect.has_table(bind, 'userachievement'):
        op.create_table('userachievement',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('user_id', sa.Integer(), nullable=False),
            sa.Column('achievement_id', sa.Integer(), nullable=False),
            sa.Column('achieved_at', sa.DateTime(), nullable=False),
            sa.ForeignKeyConstraint(['achievement_id'], ['achievement.id'], ),
            sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    if not bind.dialect.has_table(bind, 'userlanguage'):
        op.create_table('userlanguage',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('user_id', sa.Integer(), nullable=False),
            sa.Column('language', sa.Text(), nullable=False),
            sa.Column('level', sa.Text(), nullable=False),
            sa.Column('is_active', sa.Boolean(), nullable=False),
            sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    if not bind.dialect.has_table(bind, 'enrollment'):
        op.create_table('enrollment',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('user_id', sa.Integer(), nullable=False),
            sa.Column('course_id', sa.Integer(), nullable=False),
            sa.Column('enrolled_at', sa.DateTime(), nullable=False),
            sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
            sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    if not bind.dialect.has_table(bind, 'exercise'):
        op.create_table('exercise',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('course_id', sa.Integer(), nullable=False),
            sa.Column('question', sa.Text(), nullable=False),
            sa.Column('answer', sa.Text(), nullable=False),
            sa.Column('type', sa.Text(), nullable=False),
            sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    if not bind.dialect.has_table(bind, 'progress'):
        op.create_table('progress',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('user_id', sa.Integer(), nullable=False),
            sa.Column('course_id', sa.Integer(), nullable=False),
            sa.Column('date', sa.Text(), nullable=False),
            sa.Column('listening', sa.Integer(), nullable=False),
            sa.Column('reading', sa.Integer(), nullable=False),
            sa.Column('speaking', sa.Integer(), nullable=False),
            sa.Column('writing', sa.Integer(), nullable=False),
            sa.Column('vocabulary_count', sa.Integer(), nullable=False),
            sa.Column('level', sa.Text(), nullable=False),
            sa.Column('total_study_hours', sa.Text(), nullable=False),
            sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
            sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    if not bind.dialect.has_table(bind, 'shareddata'):
        op.create_table('shareddata',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('data_id', sa.Integer(), nullable=False),
            sa.Column('owner_id', sa.Integer(), nullable=False),
            sa.Column('recipient_id', sa.Integer(), nullable=False),
            sa.Column('permission', sa.Enum('READ', 'EDIT', name='sharedpermission'), nullable=False),
            sa.Column('created_at', sa.DateTime(), nullable=False),
            sa.ForeignKeyConstraint(['data_id'], ['data.id'], ),
            sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
            sa.ForeignKeyConstraint(['recipient_id'], ['user.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    if not bind.dialect.has_table(bind, 'sharegroupmember'):
        op.create_table('sharegroupmember',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('group_id', sa.Integer(), nullable=False),
            sa.Column('user_id', sa.Integer(), nullable=False),
            sa.Column('joined_at', sa.DateTime(), nullable=False),
            sa.ForeignKeyConstraint(['group_id'], ['sharegroup.id'], ),
            sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    if not bind.dialect.has_table(bind, 'exercisesubmission'):
        op.create_table('exercisesubmission',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('user_id', sa.Integer(), nullable=False),
            sa.Column('exercise_id', sa.Integer(), nullable=False),
            sa.Column('submitted_answer', sa.Text(), nullable=False),
            sa.Column('is_correct', sa.Boolean(), nullable=False),
            sa.Column('submitted_at', sa.DateTime(), nullable=False),
            sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
            sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('exercisesubmission')
    op.drop_table('sharegroupmember')
    op.drop_table('shareddata')
    op.drop_table('progress')
    op.drop_table('exercise')
    op.drop_table('enrollment')
    op.drop_table('userlanguage')
    op.drop_table('userachievement')
    op.drop_table('studylog')
    op.drop_table('sharerecord')
    op.drop_table('sharegroup')
    op.drop_table('recommendation')
    op.drop_table('friendship')
    op.drop_table('forumpost')
    op.drop_table('data')
    op.drop_table('course')
    op.drop_table('user')
    op.drop_table('achievement')
    
    with op.batch_alter_table('user') as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))

    # ### end Alembic commands ###